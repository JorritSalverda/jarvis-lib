name: Build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  gitversion:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0

  # proto:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #           toolchain: 1.60
  #           default: true
  #     - run: |
  #         sudo apt-get install -y protobuf-compiler
  #     - run: |
  #         curl -sSL \
  #           https://github.com/uber/prototool/releases/download/v1.10.0/prototool-$(uname -s)-$(uname -m) \
  #           -o /usr/local/bin/prototool && \
  #           chmod +x /usr/local/bin/prototool
  #     - run: |
  #         cargo install protobuf-codegen
  #     - run: prototool lint proto
  #     - run: prototool break check proto
  #     - run: prototool generate proto

  build:
    runs-on: ubuntu-latest
    needs: gitversion
    env:
      GITVERSION_SEMVER: ${{ needs.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get install -y --no-install-recommends musl-tools
      - run: rustup target add x86_64-unknown-linux-musl
      - run: cargo install --version 1.1.0 cargo-bump
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - run: cargo bump ${GITVERSION_SEMVER}
      - run: cargo clippy --no-deps -- --deny "warnings"
      - run: cargo test
      - run: cargo build --target x86_64-unknown-linux-musl

  tag:
    runs-on: ubuntu-latest
    needs: [gitversion, build]
    steps:
      - uses: actions/checkout@v3
      - uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ needs.gitversion.outputs.semVer }}
          tag_prefix: ''
          github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}